# Configuraciones del servidor
server:
  port: 8090
# Configuraciones de spring cloud
spring:
  cloud:
    gateway:
      routes:
      - id: servicio-productos
        uri: lb://servicio-productos
        predicates:
          - Path=/api/productos/**
        filters:
          # - CircuitBreaker=productos
          - name: CircuitBreaker
            args:
              name: productos
              statusCodes: 500
              fallbackUri: forward:/api/items/all
          - StripPrefix=2
          - ExampleCookie=Hola mi mensaje personalizado, usuario, DigitalHouse
      - id: servicio-items
        uri: lb://servicio-items
        predicates:
          - Path=/api/items/**
        filters:
          - StripPrefix=2
          - AddRequestHeader=token-request, 1234567890
          - AddResponseHeader=token-response, 0987654321
          - AddRequestParameter=nombre, Jorge
      - id: servicio-usuarios
        uri: lb://servicio-usuarios
        predicates:
          - Path=/api/usuarios/**
        filters:
          - StripPrefix=2
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: 'http://localhost:4200'
            allowedHeaders:
              - Content-Type
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
resilience4j:
  circuitbreaker:
    configs:
      defecto:
        sliding-window-size: 6
        failure-rate-threshold: 50
        wait-duration-in-open-state: 20s
        permitted-number-of-calls-in-half-open-state: 4
        slow-call-rate-threshold: 50
        slow-call-duration-threshold: 2s
    instances:
      productos:
        base-config: defecto
  timelimiter:
    configs:
      defecto:
        timeout-duration: 2s
    instances:
      productos:
        base-config: defecto
# App Properties
example:
  app:
    jwtSecret: d16a249613a9969aca19846263698f0223eeccf0e64bd62284bac665671fcb17
    jwtExpirationMs: 3600000
    jwtRefreshExpirationMs: 864000000